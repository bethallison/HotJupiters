#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Tue Jan 30 18:43:45 2018

@author: bettyallison
"""
import numpy as np #allows math functions
import matplotlib.pyplot as plt #allows graphs to be created

input1=np.genfromtxt('newdupuydata.txt', delimiter=',', names=True, dtype=None)

x=np.linspace(5,30,num=1000)

c0=9.34220
c1=-3.35222e-01
c2=6.91081e-02
c3=-3.60108e-03
c4=6.50191e-05

y=[]
for i in range(len(x)):
    y.append((c0*x[i]**0)+(c1*x[i]**1)+(c2*x[i]**2)+(c3*x[i]**3)+(c4*x[i]**4))
   
Y=[]
for i in range(len(input1['Spec'])):
    Y.append((input1['M36'][i])-(input1['distmod'][i]))
    
    
error_y1=input1['eM36']


#plt.scatter(input1['Spec'],Y,c='k',label='M6-L2')
#plt.errorbar(input1['Spec'],Y,yerr=error_y1,ls='none')
#plt.scatter(x,y,c='g',label='Polynomial Fit',s=2)
#plt.xlabel('Spectral Class')
#plt.ylabel('Absolute Magnitude M[3.6]')
#plt.legend()
#plt.xlim(5,30)
##plt.ylim(5,30)
#plt.gca().invert_yaxis()
#
#plt.show()


######################################################

x=np.linspace(5,30,num=1000)

c0= 9.73946
c1= -4.39968e-01
c2= 7.65343e-02
c3= -3.63435e-03
c4= 5.82107e-05

y1=[]
for i in range(len(x)):
    y1.append((c0*x[i]**0)+(c1*x[i]**1)+(c2*x[i]**2)+(c3*x[i]**3)+(c4*x[i]**4))

Y1=[]
for i in range(len(input1['Spec'])):
    Y1.append((input1['M45'][i])-(input1['distmod'][i]))  

error_y1=input1['eM45']

#
#plt.scatter(input1['Spec'],Y1,c='k',label='M6-L2')
#plt.errorbar(input1['Spec'],Y1,yerr=error_y1,ls='none')
#plt.scatter(x,y,c='g',label='Polynomial Fit',s=2)
#plt.xlabel('Spectral Class')
#plt.ylabel('Absolute Magnitude M[4.5]')
#plt.legend()
#plt.xlim(5,30)
##plt.ylim(5,30)
#plt.gca().invert_yaxis()
#
#plt.show()

############################################################
colour1=[]
for i in range(len(input1['Spec'])):
    colour1.append(Y[i]-Y1[i])

colour=[]
for i in range(len(x)):
    colour.append(y[i]-y1[i])
    
    
    
M45=[12.508051192629727, 12.552281838916272, 12.558076272584069, 12.197188215979416, 12.242568366367072, 12.167718571732976, 12.059803001338167, 12.401110497988579, 12.190695308488227, 12.1297907619849, 12.279143044826199, 12.120631368546521, 12.385475173622034, 12.285793788297239, 12.188631018117334, 12.137267407654456, 11.924803915255753, 12.152463169386589, 12.024563088201473, 11.890974446869865, 12.086376849897498, 11.857323058257798, 11.865360977688796, 11.877226335627155, 11.659613644783581, 11.529170309391638, 11.733093961164711, 11.574480070160144, 11.465255378649335, 11.667242633261749, 11.455207404349151, 11.405771704826353, 11.402910093672462, 11.441262074439573, 11.307396248445205, 11.430934536734856, 11.253142259889184, 11.287027032039488, 11.245096382387993, 11.28863727130723, 11.236294593698133, 11.254251966623711, 11.192050689118769, 11.140066589323165, 11.047010926225953, 11.047021510410611, 11.094034797550774, 11.144935589083589, 11.035692165092136, 11.175219453915275, 11.163503048487293, 11.14674039598847, 11.140059385732222, 11.181818991880993, 11.12264171163614, 11.185879558288459, 11.175597731440975, 11.102507804080615, 11.590475199016625, 11.62053449628244, 11.2142127234325, 11.148666572167766, 11.201683936629829, 11.186973672495665, 11.132202598239076, 11.192585003708126, 11.228398020496101, 11.170762775169493, 11.169816830196712, 11.157594269771439, 11.269173683451807, 11.293754155466365, 11.354766167665181, 11.3366472132944, 11.45899884659176, 11.559112837224395, 11.568528178029204, 11.350242347885814, 11.352659487703511, 11.239774439438744, 11.201961564564463, 11.257541286898597, 11.866190568989367, 11.558320020304375, 11.512103910056158, 11.5381678549436, 11.529966080667867, 11.488080534478874, 11.583217881065528, 11.830353101158476, 11.593730415236728, 11.689693733948035, 11.578912085697064, 11.633072199044944, 11.650536103744418, 11.944623965707656, 11.877013138298484, 11.658969588093528, 11.692427458154651, 11.761163515744849, 11.606023627293947, 12.088306129287158, 12.153051058162866, 11.962928231497077, 12.32117347275055, 12.185228672413517, 12.292809385817558, 12.453495825507428, 12.375819096784422, 12.524083395716742, 13.234148650974243]

M36 =[13.187899449869096, 13.189521339382711, 12.790255560557668, 12.743362338576583, 12.849816005061738, 12.953777712665119, 12.590956342921977, 13.061700116138267, 12.368188258738572, 12.734550276597183, 12.855192330706265, 12.810487652231718, 12.461483837176459, 12.725228678567145, 11.977415679173168, 12.280878772185847, 12.116299519019439, 12.115947989200473, 11.998552815317902, 11.995437138058143, 11.979577657314746, 12.205097687422434, 12.041984543769177, 12.013556654884821, 11.891454876455503, 12.039542534600171, 11.753010273772141, 11.597861376444262, 11.811624230139962, 11.500941396876694, 11.625168127064381, 11.465076235325643, 11.410004888339444, 11.202656405846232, 11.310233668664809, 11.383178304105098, 11.222870191602365, 11.266553083525176, 11.171871368897516, 11.195928982030257, 11.087321668937896, 11.123565667748215, 11.070013468319756, 11.095774038089363, 11.015791884597446, 11.045378711209985, 11.044400585432388, 11.129243010346439, 11.068028148146546, 11.088219977461497, 11.030682628383865, 11.177533746887358, 11.151078737526687, 11.154178077547771, 11.13870722418641, 11.222512125866022, 11.186912211469361, 11.660119829696155, 12.840003402046424, 11.945866219628742, 11.340178814064497, 11.399676694934094, 11.379969511305006, 11.2217500524589, 11.261969191925754, 11.340248062791666, 11.402693846245453, 11.370953788904854, 11.476944688509287, 11.484636350248721, 11.636094386383565, 11.488609921559936, 11.40801331233426, 11.523675706560351, 11.615192847588585, 11.425025416392351, 11.68384092020589, 11.741328853969527, 11.837883076019311, 11.910676628608913, 12.156683405391139, 12.187379062910653, 12.401130632807753, 12.37058528816034, 12.67699760744614, 12.307811684131988, 12.805672334584605, 13.187782529755578, 12.800555948087183, 12.34918719558142, 12.98629836457622, 12.396653024872991, 13.231607395832043, 12.910300070443066, 12.9333779250686, 13.386940725578592, 14.167504791743482, 14.33379918558775, 13.598022719169096, 12.61236667017565, 14.026384201114688, 14.548097455175608, 14.23972874341754, 15.241663324715621, 13.39740218187386, 14.667907370521121, 14.443690040168969, 15.570264992728339, 13.555852194139174, 14.126828387088686, 14.528811361092218]

xpoints=np.linspace(0,len(M36),len(M36))
print len(M45)
col=[]
for i in range(len(M45)):
    col.append(M36[i]-M45[i])

color36= [(str(item/max(M36))) for item in M36]
color45= [(str(item/max(M45))) for item in M45]

plt.scatter(colour,y,label='Polynomial',s=0.2,c='r')    
plt.scatter(col,M36,c=color36,cmap=plt.cm.get_cmap('viridis_r'))
plt.ylim((8,20))
plt.xlim((-1,3))
plt.gca().invert_yaxis()
plt.show()

plt.scatter(colour,y1,label='Polynomial',s=0.2,c='r')
plt.scatter(col,M45,c=color45,cmap=plt.cm.get_cmap('viridis_r'))
plt.ylim((8,20))
plt.xlim((-1,3))
plt.gca().invert_yaxis()
plt.show()

plt.scatter(xpoints, M36)
plt.scatter(xpoints, M45)
plt.gca().invert_yaxis()
plt.show()


##############################################################################
KM45=[12.515385783879019, 12.206752276404744, 12.201070801264844, 12.214077314277613, 12.256383478526436, 12.014537491328117, 11.956419655143918, 11.79774207833748, 11.604109003303078, 11.492924956555994, 11.525347529320046, 11.416136092386784, 11.335118179180308, 11.260271063822566, 11.256814496401326, 11.165089208296591, 11.067640566612965, 11.129352305921129, 11.154203265172898, 11.162031916047525, 11.264385475131776, 11.519175475301829, 11.195431238753187, 11.186019348940038, 11.150847305161657, 11.288920352536344, 11.425504179068717, 11.437250797611823, 11.235961197026553, 11.257541286898597, 11.561143666528546, 11.531274087025272, 11.63181619477618, 11.633666810759623, 11.799531323665914, 11.725730019818561, 11.75276896132995, 12.152251671168139, 12.120499315562988, 12.257750998696107]
KM36=[13.018019429883733, 12.832391615035483, 12.63635709758087, 12.688150204812437, 12.380878196963117, 12.083601639957044, 12.03933620466784, 11.999419405495306, 11.802271268698403, 11.720626212999075, 11.482671938873509, 11.424355114802532, 11.309694787093155, 11.204561325404837, 11.153909289521067, 11.082577824953844, 11.042462134208522, 11.07102383248006, 11.163657144186024, 11.17521623540485, 11.740254205184653, 11.956549760862446, 11.366408188010787, 11.29789840984462, 11.413809396986386, 11.515150587645405, 11.505847544552822, 11.732695912294293, 12.014592193442342, 12.10994877014608, 12.376271520551306, 12.578136959889232, 12.742295387296846, 12.74516534722193, 13.286066352128241, 13.866057735190637, 13.338753119606599, 13.673119169556813, 13.964111264494859, 14.976494728047545]


M45=[12.16653116973638, 12.12073389691199, 12.06018605892092, 11.987318310786058, 11.904661236898097, 11.814631218800246, 11.726997769402436, 11.641752261358095, 11.558861514827118, 11.478275097798127, 11.399930829522315, 11.335280209150906, 11.282283222605523, 11.239463535226086, 11.205744097600146, 11.180343523609485, 11.160442427002176, 11.145752392623487, 11.13606830741219, 11.131258464359954, 11.131258464359954, 11.138284980606647, 11.152475922066996, 11.174116289578505, 11.20365785792605, 11.241752323741322, 11.289303339451381, 11.347546930650193, 11.418177115756771, 11.503547591899766, 11.607009188248309, 11.709383822834207, 11.809268635851121, 11.9049053319105, 11.994169258082417, 12.074606652427001, 12.137956754417861, 12.180750128050283, 12.200364778411997, 12.195517817372856]
M36=[12.891925818933023, 12.649319333776447, 12.415508581852819, 12.19425696105764, 11.986669775886202, 11.792539813363449, 11.611070511263492, 11.470212643166574, 11.35871365594015, 11.269741510718854, 11.198884017402261, 11.143175604228619, 11.100579521484722, 11.069694499558423, 11.049582021283067, 11.039663791853704, 11.039663791853704, 11.049582021283067, 11.069694499558423, 11.100579521484722, 11.143175604228619, 11.198884017402261, 11.269741510718854, 11.35871365594015, 11.470212643166574, 11.611070511263492, 11.792539813363449, 11.986669775886202, 12.19425696105764, 12.415508581852821, 12.649319333776447, 12.891925818933023, 13.134615309591631, 13.360535303069838, 13.542376092454571, 13.646159590759961, 13.646159590759961, 13.542376092454571, 13.360535303069838, 13.134615309591631]

print len(M45)
print len(KM45)
print len(M36)
print len(KM36)
AM36=[]
AM45=[]



for i in range(len(M36)):
    AM45.append(KM45[i]-M45[i])
    AM36.append(KM36[i]-M36[i])
    
print 'AM36 ', AM36
print 'AM45 ', AM45

print 'Max diff M36 ', np.max(np.abs(AM36))  
print 'Min diff M36 ', np.min(np.abs(AM36))  
print 'Max diff M45 ', np.max(np.abs(AM45))  
print 'Min diff M45 ', np.min(np.abs(AM45))    

x1=np.sort(AM45)
print x1
x2=np.sort(AM36)
print x2
x=np.linspace(0,len(M45),len(M45))

plt.scatter(x,AM36)
plt.scatter(x,AM45)
plt.show()